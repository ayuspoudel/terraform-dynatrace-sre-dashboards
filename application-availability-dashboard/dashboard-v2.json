{
  "dashboardMetadata": {
    "name": "SRE Health Overview",
    "shared": true,
    "tags": [
      "dql",
      "availability",
      "ayush"
    ]
  },
  "tiles": [
    {
      "title": "Active Problems",
      "type": "data",
      "query": "fetch dt.davis.problems\n| expand managementZones                    \n| filter event.status == \"ACTIVE\"\n| filter managementZones == $ManagementZone \n| summarize activeProblems = count()   ",
      "visualization": "singleValue",
      "visualizationSettings": {
        "autoSelectVisualization": false,
        "thresholds": [
          {
            "id": 1,
            "field": "activeProblems",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-09-default, #649438)"
                },
                "comparator": "\u2265",
                "label": "",
                "value": 0
              },
              {
                "id": 1,
                "color": {
                  "Default": "var(--dt-colors-charts-status-warning-default, #eca440)"
                },
                "comparator": "\u2265",
                "label": ""
              },
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-status-critical-default, #c4233b)"
                },
                "comparator": "\u2265",
                "label": ""
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "gap",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "curve": "linear",
          "pointsDisplay": "auto",
          "categoricalBarChartSettings": {
            "layout": "horizontal",
            "categoryAxisTickLayout": "horizontal",
            "scale": "absolute",
            "groupMode": "stacked",
            "colorPaletteMode": "multi-color",
            "valueAxisScale": "linear"
          },
          "colorPalette": "categorical",
          "valueRepresentation": "absolute",
          "truncationMode": "middle"
        },
        "singleValue": {
          "showLabel": false,
          "label": "countIf(event.status == \"ACTIVE\")",
          "prefixIcon": "WarningIcon",
          "isIconVisible": true,
          "recordField": "activeProblems",
          "autoscale": true,
          "sparklineSettings": {},
          "alignment": "center",
          "trend": {
            "trendType": "auto",
            "isVisible": true
          },
          "colorThresholdTarget": "background"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "linewrapEnabled": false,
          "lineWrapIds": [],
          "monospacedFontEnabled": false,
          "monospacedFontColumns": [],
          "columnWidths": {},
          "columnTypeOverrides": []
        },
        "honeycomb": {
          "shape": "hexagon",
          "legend": {
            "hidden": false,
            "position": "auto",
            "ratio": "auto"
          },
          "dataMappings": {},
          "displayedFields": [],
          "truncationMode": "middle",
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "legend": {
            "position": "auto"
          },
          "yAxis": {
            "label": "Frequency",
            "isLabelVisible": true,
            "scale": "linear"
          },
          "colorPalette": "categorical",
          "dataMappings": [],
          "variant": "single",
          "truncationMode": "middle"
        },
        "valueBoundaries": {
          "min": "auto",
          "max": "auto"
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 1,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      },
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "layout": {
        "x": 6,
        "y": 3,
        "w": 2,
        "h": 3
      }
    },
    {
      "title": "Avg CPU Usage",
      "type": "data",
      "query": "timeseries usage = avg(dt.process.cpu.usage), by: {dt.entity.process_group}\n| join [\n    fetch dt.entity.process_group\n    | expand managementZones\n    | filter managementZones == $ManagementZone\n    | fieldsAdd pg_name = entity.name\n], on: { left[dt.entity.process_group] == right[id] }\n\n\n| fieldsAdd usage.single_value = arrayAvg(usage)\n| summarize avg = avg(usage.single_value)",
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "gap",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "curve": "linear",
          "pointsDisplay": "auto",
          "categoricalBarChartSettings": {
            "layout": "horizontal",
            "categoryAxisTickLayout": "horizontal",
            "scale": "absolute",
            "groupMode": "stacked",
            "colorPaletteMode": "multi-color",
            "valueAxisScale": "linear"
          },
          "colorPalette": "categorical",
          "valueRepresentation": "absolute",
          "truncationMode": "middle",
          "xAxisScaling": "analyzedTimeframe",
          "xAxisLabel": "timeframe",
          "xAxisIsLabelVisible": false,
          "hiddenLegendFields": [
            "interval"
          ],
          "leftYAxisSettings": {
            "isLabelVisible": true,
            "label": "Process memory usage"
          }
        },
        "singleValue": {
          "showLabel": false,
          "label": "avg",
          "prefixIcon": "AnalyticsIcon",
          "isIconVisible": false,
          "recordField": "avg",
          "autoscale": true,
          "sparklineSettings": {},
          "alignment": "center",
          "trend": {
            "trendType": "custom",
            "isVisible": true,
            "trendField": "avg",
            "isRelative": false
          },
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "linewrapEnabled": false,
          "lineWrapIds": [],
          "monospacedFontEnabled": false,
          "monospacedFontColumns": [],
          "columnWidths": {},
          "columnTypeOverrides": []
        },
        "honeycomb": {
          "shape": "hexagon",
          "legend": {
            "hidden": false,
            "position": "auto",
            "ratio": "auto"
          },
          "dataMappings": {},
          "displayedFields": [],
          "truncationMode": "middle",
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "legend": {
            "position": "auto"
          },
          "yAxis": {
            "label": "Frequency",
            "isLabelVisible": true,
            "scale": "linear"
          },
          "colorPalette": "categorical",
          "dataMappings": [],
          "variant": "single",
          "truncationMode": "middle"
        },
        "valueBoundaries": {
          "min": "auto",
          "max": "auto"
        },
        "autoSelectVisualization": false,
        "unitsOverrides": [
          {
            "identifier": "avg",
            "unitCategory": "percentage",
            "baseUnit": "percent",
            "displayUnit": null,
            "decimals": 2,
            "suffix": "",
            "delimiter": false,
            "added": 1746659333913
          }
        ]
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 1,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      },
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "layout": {
        "x": 20,
        "y": 3,
        "w": 2,
        "h": 3
      }
    },
    {
      "title": "Avg MEM Usage",
      "type": "data",
      "query": "timeseries usage = avg(dt.process.memory.usage), by: {dt.entity.process_group}\n| join [\n    fetch dt.entity.process_group\n    | expand managementZones\n    | filter managementZones == $ManagementZone\n    | fieldsAdd pg_name = entity.name\n], on: { left[dt.entity.process_group] == right[id] }\n\n\n| fieldsAdd usage.single_value = arrayAvg(usage)\n| summarize avg = avg(usage.single_value)",
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "gap",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "curve": "linear",
          "pointsDisplay": "auto",
          "categoricalBarChartSettings": {
            "layout": "horizontal",
            "categoryAxisTickLayout": "horizontal",
            "scale": "absolute",
            "groupMode": "stacked",
            "colorPaletteMode": "multi-color",
            "valueAxisScale": "linear"
          },
          "colorPalette": "categorical",
          "valueRepresentation": "absolute",
          "truncationMode": "middle",
          "xAxisScaling": "analyzedTimeframe",
          "xAxisLabel": "timeframe",
          "xAxisIsLabelVisible": false,
          "hiddenLegendFields": [
            "interval"
          ],
          "leftYAxisSettings": {
            "isLabelVisible": true,
            "label": "Process memory usage"
          }
        },
        "singleValue": {
          "showLabel": false,
          "label": "avg",
          "prefixIcon": "AnalyticsIcon",
          "isIconVisible": false,
          "recordField": "avg",
          "autoscale": true,
          "sparklineSettings": {},
          "alignment": "center",
          "trend": {
            "trendType": "custom",
            "isVisible": true,
            "trendField": "avg",
            "isRelative": false
          },
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "linewrapEnabled": false,
          "lineWrapIds": [],
          "monospacedFontEnabled": false,
          "monospacedFontColumns": [],
          "columnWidths": {},
          "columnTypeOverrides": []
        },
        "honeycomb": {
          "shape": "hexagon",
          "legend": {
            "hidden": false,
            "position": "auto",
            "ratio": "auto"
          },
          "dataMappings": {},
          "displayedFields": [],
          "truncationMode": "middle",
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "legend": {
            "position": "auto"
          },
          "yAxis": {
            "label": "Frequency",
            "isLabelVisible": true,
            "scale": "linear"
          },
          "colorPalette": "categorical",
          "dataMappings": [],
          "variant": "single",
          "truncationMode": "middle"
        },
        "valueBoundaries": {
          "min": "auto",
          "max": "auto"
        },
        "autoSelectVisualization": false,
        "unitsOverrides": [
          {
            "identifier": "avg",
            "unitCategory": "percentage",
            "baseUnit": "percent",
            "displayUnit": null,
            "decimals": 2,
            "suffix": "",
            "delimiter": false,
            "added": 1746659333913
          }
        ]
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 1,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      },
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "layout": {
        "x": 18,
        "y": 3,
        "w": 2,
        "h": 3
      }
    },
    {
      "title": "Error Rate",
      "type": "data",
      "query": "fetch dt.entity.service\n\n| fieldsAdd \n    entityId = toString(id)\n| fieldsAdd\n    id,\n    entityId,\n    entity.name,\n    serviceType,\n    lifetime,\n    lifeTimeEndMillis = unixMillisFromTimestamp(lifetime[end])\n\n| lookup [\n    fetch dt.davis.events.snapshots\n    | filter in(affected_entity_type, \"dt.entity.service\")\n    | expand affected_entity_ids\n    |dedup event.id, sort: {timestamp desc}\n    | filter event.status == \"ACTIVE\"\n    | fieldsAdd healthIndicators =  if(in(event.type,{\"SERVICE_ERROR_RATE_INCREASED\", \"SERVICE_SLOWDOWN\", \"SERVICE_UNEXPECTED_HIGH_LOAD\", \"SERVICE_UNEXPECTED_LOW_LOAD\", \"CUSTOM_ALERT\"}),\n                record(event.id, event.date, event.description, event.group)) \n    | summarize {healthIndicators = arrayRemoveNulls(collectArray(healthIndicators)), by:{affected_entity_ids}}],\n                sourceField : id, lookupField: affected_entity_ids, fields: {healthIndicators}, executionOrder: leftFirst\n    | sort arraySize(coalesce(healthIndicators, array())) desc\n    \n\n| fieldsAdd runs_on_from_attr = entityAttr(id, \"runs_on\", type: \"dt.entity.service\")\n| fieldsAdd pg_id = runs_on_from_attr[dt.entity.process_group]\n| fieldsAdd pg_name = entityName(pg_id, type: \"dt.entity.process_group\")\n| fieldsAdd entityAttr(id, \"tags\", type: \"dt.entity.service\"),\n            entityAttr(id, \"softwareTechnologies\", type: \"dt.entity.service\"),\n            entityAttr(id, \"serviceDetectionAttributes\", type: \"dt.entity.service\"),\n            entityAttr(id, \"publicCloudRegion\", type: \"dt.entity.service\")\n\n| fieldsAdd icon_from_attr = entityAttr(id, \"icon\", type: \"dt.entity.service\")\n| fieldsAdd entity = record(entityId = id, displayName = entity.name, lifetimeEndMillis = unixMillisFromTimestamp(lifetime[end]),\n            extraInfo = if(serviceType == \"UNIFIED\", toString(serviceDetectionAttributes), else: concat(pg_name)),\n            icon = icon_from_attr[primaryIconType])\n\n| fields HealthAlerts = healthIndicators, Service = entity[displayName]\n| fieldsAdd alertCount = arraySize(coalesce(HealthAlerts, array()))\n| fieldsAdd Reliability = 100.0 - (alertCount * 10.0)\n| fieldsAdd HealthAlerts = if(isNull(HealthAlerts), \"\ud83d\udfe9 Healthy\", else: \"\ud83d\udfe5 Unhealthy\")\n\n| sort Service asc\n\n| join [fetch dt.entity.service\n| expand managementZones\n| filter managementZones == $ManagementZone\n| fieldsAdd Service = entity.name],\n  on: {left[Service] == right[Service]}\n| dedup Service\n|lookup[timeseries {  `Response Time/ Latency` = percentile(dt.service.request.response_time, 90)},\n                       by:{ dt.entity.service }\n| fieldsAdd Service = entityName(dt.entity.service)\n| fieldsAdd `Response Time/ Latency` = arrayAvg(`Response Time/ Latency`)], \n  lookupField:Service, \n  SourceField:Service, \n  Fields: {`Response Time/ Latency`}\n\n|lookup[timeseries {`Request Volume` = sum(dt.service.request.count)}, by: { dt.entity.service }\n\n| fieldsAdd Service = entityName(dt.entity.service) \n| fieldsAdd `Request Volume` = arraySum(`Request Volume`)\n], lookupField:Service, SourceField: Service, Fields: `Request Volume`\n\n\n|lookup[timeseries {\n  err5xx = sum(\n              dt.service.request.count,\n              filter:{ http.response.status_code >= 500\n                       AND http.response.status_code <= 599 })\n}, by: {dt.entity.service}    \n\n| fieldsAdd Service = entityName(dt.entity.service)\n| fieldsAdd err5xx = arraySum(err5xx)\n], lookupField:Service, SourceField: Service, Fields: {err5xx}\n| fieldsAdd err5xx = if(isNull(err5xx), 0, else: err5xx)\n\n|lookup[timeseries {\n  err4xx = sum(\n              dt.service.request.count,\n              filter:{ http.response.status_code >= 400\n                       AND http.response.status_code <= 499 })\n}, by: {dt.entity.service}    \n\n| fieldsAdd Service = entityName(dt.entity.service)\n| fieldsAdd err4xx = arraySum(err4xx)\n], lookupField:Service, SourceField: Service, Fields: {err4xx}\n\n| fieldsAdd err4xx = if(isNull(err4xx), 0, else: err4xx)\n| fieldsAdd err4xx = if((err4xx>10*err5xx), 0, else: err4xx) \n| fieldsAdd `Request Volume` = if(isNull(`Request Volume`), 0, else: `Request Volume`)\n| fieldsAdd `Response Time/ Latency` = if(isNull(`Response Time/ Latency`), 0, else: `Response Time/ Latency`)\n\n| fieldsAdd `HTTP Error Rate (%)` = if(`Request Volume` > 100 AND (err5xx + err4xx)< `Request Volume`, ((err5xx + err4xx) / `Request Volume`) * 100.0, else: 0.0)\n| fieldsAdd `Reliability (%)`= 100 - `HTTP Error Rate (%)`\n| fields Service, HealthAlerts, `Reliability (%)`,`HTTP Error Rate (%)`,`Request Volume`, `Response Time/ Latency`\n\n| summarize Reliability = avg(`HTTP Error Rate (%)`)\n\n\n",
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "Reliability",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-09-default, #649438)"
                },
                "comparator": "\u2265",
                "label": "",
                "value": 0
              },
              {
                "id": 1,
                "color": {
                  "Default": "var(--dt-colors-charts-status-warning-default, #eca440)"
                },
                "comparator": "\u2265",
                "label": ""
              },
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-status-critical-default, #c4233b)"
                },
                "comparator": "\u2265",
                "label": "",
                "value": 1
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "gap",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "curve": "linear",
          "pointsDisplay": "auto",
          "categoricalBarChartSettings": {
            "layout": "horizontal",
            "categoryAxisTickLayout": "horizontal",
            "scale": "absolute",
            "groupMode": "stacked",
            "colorPaletteMode": "multi-color",
            "valueAxisScale": "linear"
          },
          "colorPalette": "categorical",
          "valueRepresentation": "absolute",
          "truncationMode": "middle"
        },
        "singleValue": {
          "showLabel": false,
          "label": "countIf(event.status == \"ACTIVE\")",
          "prefixIcon": "WarningIcon",
          "isIconVisible": true,
          "recordField": "Reliability",
          "autoscale": true,
          "sparklineSettings": {},
          "alignment": "center",
          "trend": {
            "trendType": "auto",
            "isVisible": true
          },
          "colorThresholdTarget": "background"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "linewrapEnabled": false,
          "lineWrapIds": [],
          "monospacedFontEnabled": false,
          "monospacedFontColumns": [],
          "columnWidths": {},
          "columnTypeOverrides": []
        },
        "honeycomb": {
          "shape": "hexagon",
          "legend": {
            "hidden": false,
            "position": "auto",
            "ratio": "auto"
          },
          "dataMappings": {},
          "displayedFields": [],
          "truncationMode": "middle",
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "legend": {
            "position": "auto"
          },
          "yAxis": {
            "label": "Frequency",
            "isLabelVisible": true,
            "scale": "linear"
          },
          "colorPalette": "categorical",
          "dataMappings": [],
          "variant": "single",
          "truncationMode": "middle"
        },
        "valueBoundaries": {
          "min": "auto",
          "max": "auto"
        },
        "autoSelectVisualization": false,
        "unitsOverrides": [
          {
            "identifier": "Error_rate",
            "unitCategory": "percentage",
            "baseUnit": "percent",
            "displayUnit": null,
            "decimals": 2,
            "suffix": "",
            "delimiter": false,
            "added": 1746663625978
          }
        ]
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 1,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      },
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "layout": {
        "x": 2,
        "y": 3,
        "w": 2,
        "h": 3
      }
    },
    {
      "title": "HTTP 5XX Errors",
      "type": "data",
      "query": "\n\ntimeseries {\n  err5xx = sum(\n              dt.service.request.count,\n              filter:{ http.response.status_code >= 500\n                       AND http.response.status_code <= 599 })\n}, by: {dt.entity.service}, nonempty:true   \n\n\n| fieldsAdd Service = entityName(dt.entity.service)\n| join [fetch dt.entity.service\n| expand managementZones\n| filter managementZones == $ManagementZone\n| fieldsAdd Service = entity.name],\n  on: {left[Service] == right[Service]}\n| dedup Service\n\n| fields svc5xx = arraySum(err5xx)\n| summarize Total = sum(svc5xx)\n\n",
      "visualization": "singleValue",
      "visualizationSettings": {
        "autoSelectVisualization": false,
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "gap",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "curve": "linear",
          "pointsDisplay": "auto",
          "categoricalBarChartSettings": {
            "layout": "horizontal",
            "categoryAxisTickLayout": "horizontal",
            "scale": "absolute",
            "groupMode": "stacked",
            "colorPaletteMode": "multi-color",
            "valueAxisScale": "linear"
          },
          "colorPalette": "categorical",
          "valueRepresentation": "absolute",
          "truncationMode": "middle",
          "xAxisScaling": "analyzedTimeframe",
          "xAxisLabel": "timeframe",
          "xAxisIsLabelVisible": false,
          "hiddenLegendFields": [
            "right.entity",
            "interval",
            "err5xx"
          ],
          "leftYAxisSettings": {
            "isLabelVisible": true,
            "label": "Service request count"
          }
        },
        "singleValue": {
          "showLabel": false,
          "label": "svc5xx",
          "prefixIcon": "AnalyticsIcon",
          "isIconVisible": false,
          "recordField": "Total",
          "autoscale": true,
          "sparklineSettings": {},
          "alignment": "center",
          "trend": {
            "trendType": "custom",
            "isVisible": true,
            "trendField": "Total",
            "isRelative": false
          },
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "linewrapEnabled": false,
          "lineWrapIds": [],
          "monospacedFontEnabled": false,
          "monospacedFontColumns": [],
          "columnWidths": {},
          "columnTypeOverrides": []
        },
        "honeycomb": {
          "shape": "hexagon",
          "legend": {
            "hidden": false,
            "position": "auto",
            "ratio": "auto"
          },
          "dataMappings": {},
          "displayedFields": [],
          "truncationMode": "middle",
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "legend": {
            "position": "auto"
          },
          "yAxis": {
            "label": "Frequency",
            "isLabelVisible": true,
            "scale": "linear"
          },
          "colorPalette": "categorical",
          "dataMappings": [],
          "variant": "single",
          "truncationMode": "middle"
        },
        "valueBoundaries": {
          "min": "auto",
          "max": "auto"
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 1,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      },
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "layout": {
        "x": 14,
        "y": 3,
        "w": 2,
        "h": 3
      }
    },
    {
      "title": "Latency Trends",
      "type": "data",
      "query": "\ntimeseries svc_p90 = percentile(dt.service.request.response_time, 90),\n                       by:{ dt.entity.service },\n                       bins:60,\n                       nonempty:true\n\n| fieldsAdd Service = entityName(dt.entity.service)\n| join [fetch dt.entity.service\n| expand managementZones\n| filter managementZones == $ManagementZone\n| fieldsAdd Service = entity.name],\n  on: {left[Service] == right[Service]}\n| dedup Service\n| fieldsAdd requestCount_timeseries = svc_p90\n| fieldsAdd metricName = \"Throughput\"",
      "visualization": "lineChart",
      "visualizationSettings": {
        "autoSelectVisualization": false,
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "gap",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "curve": "linear",
          "pointsDisplay": "auto",
          "categoricalBarChartSettings": {
            "layout": "horizontal",
            "categoryAxisTickLayout": "horizontal",
            "scale": "absolute",
            "groupMode": "stacked",
            "colorPaletteMode": "multi-color",
            "valueAxisScale": "linear",
            "categoryAxisLabel": "dt.entity.service,Service,right.entity.name,right.id,right.managementZones,right.Service",
            "valueAxisLabel": "interval",
            "tooltipVariant": "single"
          },
          "colorPalette": "categorical",
          "valueRepresentation": "absolute",
          "truncationMode": "middle",
          "bandChartSettings": {
            "lower": "svc_p90",
            "upper": "requestCount_timeseries"
          },
          "xAxisScaling": "analyzedTimeframe",
          "xAxisLabel": "timeframe",
          "xAxisIsLabelVisible": false,
          "hiddenLegendFields": [
            "dt.entity.service",
            "right.entity.name",
            "right.id",
            "right.managementZones",
            "right.Service",
            "metricName"
          ],
          "fieldMapping": {
            "timestamp": "timeframe",
            "leftAxisValues": [
              "requestCount_timeseries",
              "svc_p90"
            ]
          },
          "leftYAxisSettings": {
            "isLabelVisible": true,
            "label": "Service request response time"
          },
          "rightYAxisSettings": {
            "scale": "log",
            "min": "auto"
          },
          "tooltip": {
            "seriesDisplayMode": "multi-line",
            "variant": "shared"
          },
          "legend": {
            "hidden": true
          }
        },
        "singleValue": {
          "showLabel": true,
          "label": "dt.entity.service",
          "prefixIcon": "AnalyticsIcon",
          "isIconVisible": false,
          "recordField": "dt.entity.service",
          "autoscale": true,
          "sparklineSettings": {
            "record": "requestCount_timeseries"
          },
          "alignment": "center",
          "trend": {
            "trendType": "auto",
            "isVisible": true
          },
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "linewrapEnabled": false,
          "lineWrapIds": [],
          "monospacedFontEnabled": false,
          "monospacedFontColumns": [],
          "columnWidths": {},
          "columnTypeOverrides": [
            {
              "fields": [
                "svc_p90",
                "requestCount_timeseries"
              ],
              "value": "sparkline",
              "id": 1746661204148
            }
          ]
        },
        "honeycomb": {
          "shape": "hexagon",
          "legend": {
            "hidden": false,
            "position": "auto",
            "ratio": "auto"
          },
          "dataMappings": {
            "value": "dt.entity.service"
          },
          "displayedFields": [
            "dt.entity.service",
            "Service",
            "right.entity.name",
            "right.id",
            "right.managementZones",
            "right.Service"
          ],
          "truncationMode": "middle",
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "legend": {
            "position": "auto"
          },
          "yAxis": {
            "label": "Frequency",
            "isLabelVisible": true,
            "scale": "linear"
          },
          "colorPalette": "categorical",
          "dataMappings": [
            {
              "valueAxis": "interval",
              "rangeAxis": ""
            }
          ],
          "variant": "single",
          "truncationMode": "middle",
          "displayedFields": [
            "dt.entity.service",
            "Service",
            "right.entity.name",
            "right.id",
            "right.managementZones",
            "right.Service"
          ]
        },
        "valueBoundaries": {
          "min": "auto",
          "max": "auto"
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 1,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      },
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "layout": {
        "x": 11,
        "y": 8,
        "w": 6,
        "h": 6
      }
    },
    {
      "type": "markdown",
      "content": "# HTTP Errors\n",
      "layout": {
        "x": 15,
        "y": 2,
        "w": 3,
        "h": 1
      }
    },
    {
      "type": "markdown",
      "content": "# Reliability\n\n\n",
      "layout": {
        "x": 1,
        "y": 2,
        "w": 4,
        "h": 1
      }
    },
    {
      "type": "markdown",
      "content": "# Saturation\n\n",
      "layout": {
        "x": 19,
        "y": 2,
        "w": 4,
        "h": 1
      }
    },
    {
      "type": "markdown",
      "content": "# Status",
      "layout": {
        "x": 7,
        "y": 2,
        "w": 3,
        "h": 1
      }
    },
    {
      "type": "markdown",
      "content": "# Traffic\n",
      "layout": {
        "x": 11,
        "y": 2,
        "w": 3,
        "h": 1
      }
    },
    {
      "title": "Reliability %",
      "type": "data",
      "query": "fetch dt.entity.service\n\n| fieldsAdd \n    entityId = toString(id)\n| fieldsAdd\n    id,\n    entityId,\n    entity.name,\n    serviceType,\n    lifetime,\n    lifeTimeEndMillis = unixMillisFromTimestamp(lifetime[end])\n\n| lookup [\n    fetch dt.davis.events.snapshots\n    | filter in(affected_entity_type, \"dt.entity.service\")\n    | expand affected_entity_ids\n    |dedup event.id, sort: {timestamp desc}\n    | filter event.status == \"ACTIVE\"\n    | fieldsAdd healthIndicators =  if(in(event.type,{\"SERVICE_ERROR_RATE_INCREASED\", \"SERVICE_SLOWDOWN\", \"SERVICE_UNEXPECTED_HIGH_LOAD\", \"SERVICE_UNEXPECTED_LOW_LOAD\", \"CUSTOM_ALERT\"}),\n                record(event.id, event.date, event.description, event.group)) \n    | summarize {healthIndicators = arrayRemoveNulls(collectArray(healthIndicators)), by:{affected_entity_ids}}],\n                sourceField : id, lookupField: affected_entity_ids, fields: {healthIndicators}, executionOrder: leftFirst\n    | sort arraySize(coalesce(healthIndicators, array())) desc\n    \n\n| fieldsAdd runs_on_from_attr = entityAttr(id, \"runs_on\", type: \"dt.entity.service\")\n| fieldsAdd pg_id = runs_on_from_attr[dt.entity.process_group]\n| fieldsAdd pg_name = entityName(pg_id, type: \"dt.entity.process_group\")\n| fieldsAdd entityAttr(id, \"tags\", type: \"dt.entity.service\"),\n            entityAttr(id, \"softwareTechnologies\", type: \"dt.entity.service\"),\n            entityAttr(id, \"serviceDetectionAttributes\", type: \"dt.entity.service\"),\n            entityAttr(id, \"publicCloudRegion\", type: \"dt.entity.service\")\n\n| fieldsAdd icon_from_attr = entityAttr(id, \"icon\", type: \"dt.entity.service\")\n| fieldsAdd entity = record(entityId = id, displayName = entity.name, lifetimeEndMillis = unixMillisFromTimestamp(lifetime[end]),\n            extraInfo = if(serviceType == \"UNIFIED\", toString(serviceDetectionAttributes), else: concat(pg_name)),\n            icon = icon_from_attr[primaryIconType])\n\n| fields HealthAlerts = healthIndicators, Service = entity[displayName]\n| fieldsAdd alertCount = arraySize(coalesce(HealthAlerts, array()))\n| fieldsAdd Reliability = 100.0 - (alertCount * 10.0)\n| fieldsAdd HealthAlerts = if(isNull(HealthAlerts), \"\ud83d\udfe9 Healthy\", else: \"\ud83d\udfe5 Unhealthy\")\n\n| sort Service asc\n\n| join [fetch dt.entity.service\n| expand managementZones\n| filter managementZones == $ManagementZone\n| fieldsAdd Service = entity.name],\n  on: {left[Service] == right[Service]}\n| dedup Service\n|lookup[timeseries {  `Response Time/ Latency` = percentile(dt.service.request.response_time, 90)},\n                       by:{ dt.entity.service }\n| fieldsAdd Service = entityName(dt.entity.service)\n| fieldsAdd `Response Time/ Latency` = arrayAvg(`Response Time/ Latency`)], \n  lookupField:Service, \n  SourceField:Service, \n  Fields: {`Response Time/ Latency`}\n\n|lookup[timeseries {`Request Volume` = sum(dt.service.request.count)}, by: { dt.entity.service }\n\n| fieldsAdd Service = entityName(dt.entity.service) \n| fieldsAdd `Request Volume` = arraySum(`Request Volume`)\n], lookupField:Service, SourceField: Service, Fields: `Request Volume`\n\n\n|lookup[timeseries {\n  err5xx = sum(\n              dt.service.request.count,\n              filter:{ http.response.status_code >= 500\n                       AND http.response.status_code <= 599 })\n}, by: {dt.entity.service}    \n\n| fieldsAdd Service = entityName(dt.entity.service)\n| fieldsAdd err5xx = arraySum(err5xx)\n], lookupField:Service, SourceField: Service, Fields: {err5xx}\n| fieldsAdd err5xx = if(isNull(err5xx), 0, else: err5xx)\n\n|lookup[timeseries {\n  err4xx = sum(\n              dt.service.request.count,\n              filter:{ http.response.status_code >= 400\n                       AND http.response.status_code <= 499 })\n}, by: {dt.entity.service}    \n\n| fieldsAdd Service = entityName(dt.entity.service)\n| fieldsAdd err4xx = arraySum(err4xx)\n], lookupField:Service, SourceField: Service, Fields: {err4xx}\n\n| fieldsAdd err4xx = if(isNull(err4xx), 0, else: err4xx)\n| fieldsAdd err4xx = if((err4xx>10*err5xx), 0, else: err4xx) \n| fieldsAdd `Request Volume` = if(isNull(`Request Volume`), 0, else: `Request Volume`)\n| fieldsAdd `Response Time/ Latency` = if(isNull(`Response Time/ Latency`), 0, else: `Response Time/ Latency`)\n\n| fieldsAdd `HTTP Error Rate (%)` = if(`Request Volume` > 100 AND (err5xx + err4xx)< `Request Volume`, ((err5xx + err4xx) / `Request Volume`) * 100.0, else: 0.0)\n| fieldsAdd `Reliability (%)`= 100 - `HTTP Error Rate (%)`\n| fields Service, HealthAlerts, `Reliability (%)`,`HTTP Error Rate (%)`,`Request Volume`, `Response Time/ Latency`\n\n| summarize Reliability = avg(`Reliability (%)`)\n\n\n",
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "Reliability",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-09-default, #649438)"
                },
                "comparator": "\u2265",
                "label": "",
                "value": 99.5
              },
              {
                "id": 1,
                "color": {
                  "Default": "var(--dt-colors-charts-status-warning-default, #eca440)"
                },
                "comparator": "\u2265",
                "label": "",
                "value": 99
              },
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-status-critical-default, #c4233b)"
                },
                "comparator": "\u2265",
                "label": "",
                "value": 0
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "gap",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "curve": "linear",
          "pointsDisplay": "auto",
          "categoricalBarChartSettings": {
            "layout": "horizontal",
            "categoryAxisTickLayout": "horizontal",
            "scale": "absolute",
            "groupMode": "stacked",
            "colorPaletteMode": "multi-color",
            "valueAxisScale": "linear"
          },
          "colorPalette": "categorical",
          "valueRepresentation": "absolute",
          "truncationMode": "middle",
          "xAxisScaling": "analyzedTimeframe",
          "xAxisLabel": "timeframe",
          "xAxisIsLabelVisible": false,
          "hiddenLegendFields": [
            "interval"
          ],
          "leftYAxisSettings": {
            "isLabelVisible": true,
            "label": "Availability rate (by location) [Browser monitor]"
          }
        },
        "singleValue": {
          "showLabel": false,
          "label": "countIf(event.status == \"ACTIVE\")",
          "prefixIcon": "WarningIcon",
          "isIconVisible": true,
          "recordField": "Reliability",
          "autoscale": true,
          "sparklineSettings": {
            "record": "series",
            "lineType": "smooth",
            "variant": "area"
          },
          "alignment": "center",
          "trend": {
            "trendType": "custom",
            "isVisible": true,
            "trendField": "Reliability",
            "isRelative": false
          },
          "colorThresholdTarget": "background"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "linewrapEnabled": false,
          "lineWrapIds": [],
          "monospacedFontEnabled": false,
          "monospacedFontColumns": [],
          "columnWidths": {},
          "columnTypeOverrides": [],
          "columnOrder": [
            "[\"Reliability\"]"
          ]
        },
        "honeycomb": {
          "shape": "hexagon",
          "legend": {
            "hidden": false,
            "position": "auto",
            "ratio": "auto"
          },
          "dataMappings": {},
          "displayedFields": [],
          "truncationMode": "middle",
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "legend": {
            "position": "auto"
          },
          "yAxis": {
            "label": "Frequency",
            "isLabelVisible": true,
            "scale": "linear"
          },
          "colorPalette": "categorical",
          "dataMappings": [],
          "variant": "single",
          "truncationMode": "middle"
        },
        "valueBoundaries": {
          "min": "auto",
          "max": "auto"
        },
        "autoSelectVisualization": false
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 1,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      },
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "layout": {
        "x": 0,
        "y": 3,
        "w": 2,
        "h": 3
      }
    },
    {
      "title": "Requests",
      "type": "data",
      "query": "timeSeries count = sum(dt.service.request.count), by: {dt.entity.service}\n| fieldsAdd count.single_value = arraySum(count)\n| fieldsAdd Service = entityName(dt.entity.service)\n| join [fetch dt.entity.service\n| expand managementZones\n| filter managementZones == $ManagementZone\n| fieldsAdd Service = entity.name],\n  on: {left[Service] == right[Service]}\n| fields Service, count.single_value\n| dedup Service\n| summarize sum(count.single_value)",
      "visualization": "singleValue",
      "visualizationSettings": {
        "autoSelectVisualization": false,
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "gap",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "curve": "linear",
          "pointsDisplay": "auto",
          "categoricalBarChartSettings": {
            "layout": "horizontal",
            "categoryAxisTickLayout": "horizontal",
            "scale": "absolute",
            "groupMode": "stacked",
            "colorPaletteMode": "multi-color",
            "valueAxisScale": "linear"
          },
          "colorPalette": "categorical",
          "valueRepresentation": "absolute",
          "truncationMode": "middle"
        },
        "singleValue": {
          "showLabel": false,
          "label": "count.single_value",
          "prefixIcon": "AnalyticsIcon",
          "isIconVisible": false,
          "recordField": "sum(count.single_value)",
          "autoscale": true,
          "sparklineSettings": {},
          "alignment": "center",
          "trend": {
            "trendType": "custom",
            "isVisible": true,
            "trendField": "sum(count.single_value)",
            "isRelative": false
          },
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "linewrapEnabled": false,
          "lineWrapIds": [],
          "monospacedFontEnabled": false,
          "monospacedFontColumns": [],
          "columnWidths": {},
          "columnTypeOverrides": []
        },
        "honeycomb": {
          "shape": "hexagon",
          "legend": {
            "hidden": false,
            "position": "auto",
            "ratio": "auto"
          },
          "dataMappings": {},
          "displayedFields": [],
          "truncationMode": "middle",
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "legend": {
            "position": "auto"
          },
          "yAxis": {
            "label": "Frequency",
            "isLabelVisible": true,
            "scale": "linear"
          },
          "colorPalette": "categorical",
          "dataMappings": [
            {
              "valueAxis": "sum(count.single_value)",
              "rangeAxis": ""
            }
          ],
          "variant": "single",
          "truncationMode": "middle",
          "displayedFields": [
            "sum(count.single_value)"
          ]
        },
        "valueBoundaries": {
          "min": "auto",
          "max": "auto"
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 1,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      },
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "layout": {
        "x": 10,
        "y": 3,
        "w": 2,
        "h": 3
      }
    },
    {
      "title": "Services Health",
      "type": "data",
      "query": "fetch dt.entity.service\n\n| fieldsAdd \n    entityId = toString(id)\n| fieldsAdd\n    id,\n    entityId,\n    entity.name,\n    serviceType,\n    lifetime,\n    lifeTimeEndMillis = unixMillisFromTimestamp(lifetime[end])\n\n| lookup [\n    fetch dt.davis.events.snapshots\n    | filter in(affected_entity_type, \"dt.entity.service\")\n    | expand affected_entity_ids\n    |dedup event.id, sort: {timestamp desc}\n    | filter event.status == \"ACTIVE\"\n    | fieldsAdd healthIndicators =  if(in(event.type,{\"SERVICE_ERROR_RATE_INCREASED\", \"SERVICE_SLOWDOWN\", \"SERVICE_UNEXPECTED_HIGH_LOAD\", \"SERVICE_UNEXPECTED_LOW_LOAD\", \"CUSTOM_ALERT\"}),\n                record(event.id, event.date, event.description, event.group)) \n    | summarize {healthIndicators = arrayRemoveNulls(collectArray(healthIndicators)), by:{affected_entity_ids}}],\n                sourceField : id, lookupField: affected_entity_ids, fields: {healthIndicators}, executionOrder: leftFirst\n    | sort arraySize(coalesce(healthIndicators, array())) desc\n    | limit 1000\n    \n\n| fieldsAdd runs_on_from_attr = entityAttr(id, \"runs_on\", type: \"dt.entity.service\")\n| fieldsAdd pg_id = runs_on_from_attr[dt.entity.process_group]\n| fieldsAdd pg_name = entityName(pg_id, type: \"dt.entity.process_group\")\n| fieldsAdd entityAttr(id, \"tags\", type: \"dt.entity.service\"),\n            entityAttr(id, \"softwareTechnologies\", type: \"dt.entity.service\"),\n            entityAttr(id, \"serviceDetectionAttributes\", type: \"dt.entity.service\"),\n            entityAttr(id, \"publicCloudRegion\", type: \"dt.entity.service\")\n\n| fieldsAdd icon_from_attr = entityAttr(id, \"icon\", type: \"dt.entity.service\")\n| fieldsAdd entity = record(entityId = id, displayName = entity.name, lifetimeEndMillis = unixMillisFromTimestamp(lifetime[end]),\n            extraInfo = if(serviceType == \"UNIFIED\", toString(serviceDetectionAttributes), else: concat(pg_name)),\n            icon = icon_from_attr[primaryIconType])\n\n| fields HealthAlerts = healthIndicators, Service = entity[displayName]\n| fieldsAdd HealthAlerts = if(isNull(HealthAlerts), \"Healthy\")\n| sort Service asc\n\n| join [fetch dt.entity.service\n| expand managementZones\n| filter managementZones == $ManagementZone\n| fieldsAdd Service = entity.name],\n  on: {left[Service] == right[Service]}\n| dedup Service\n| fields Service, HealthAlerts",
      "visualization": "honeycomb",
      "visualizationSettings": {
        "autoSelectVisualization": false,
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "gap",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "curve": "linear",
          "pointsDisplay": "auto",
          "categoricalBarChartSettings": {
            "layout": "horizontal",
            "categoryAxisTickLayout": "horizontal",
            "scale": "absolute",
            "groupMode": "stacked",
            "colorPaletteMode": "multi-color",
            "valueAxisScale": "linear"
          },
          "colorPalette": "categorical",
          "valueRepresentation": "absolute",
          "truncationMode": "middle"
        },
        "singleValue": {
          "showLabel": true,
          "label": "",
          "prefixIcon": "AnalyticsIcon",
          "isIconVisible": false,
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "linewrapEnabled": false,
          "lineWrapIds": [],
          "monospacedFontEnabled": false,
          "monospacedFontColumns": [],
          "columnWidths": {},
          "columnTypeOverrides": []
        },
        "honeycomb": {
          "shape": "hexagon",
          "legend": {
            "hidden": true,
            "position": "bottom",
            "ratio": "auto"
          },
          "dataMappings": {
            "value": "HealthAlerts"
          },
          "displayedFields": [
            "Service"
          ],
          "truncationMode": "end",
          "colorMode": "custom-colors",
          "colorPalette": "categorical",
          "customColors": [
            {
              "id": 5420103.400000006,
              "value": "Healthy",
              "color": {
                "Default": "var(--dt-colors-charts-categorical-color-09-default, #649438)"
              },
              "comparator": "="
            },
            {
              "id": 5492720.5,
              "value": "Alert",
              "color": "#b3007d",
              "comparator": "="
            }
          ]
        },
        "histogram": {
          "legend": {
            "position": "auto"
          },
          "yAxis": {
            "label": "Frequency",
            "isLabelVisible": true,
            "scale": "linear"
          },
          "colorPalette": "categorical",
          "dataMappings": [],
          "variant": "single",
          "truncationMode": "middle"
        },
        "valueBoundaries": {
          "min": "auto",
          "max": "auto"
        },
        "legend": {
          "showLegend": false,
          "position": "auto",
          "ratio": 10
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 1,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      },
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "layout": {
        "x": 0,
        "y": 8,
        "w": 3,
        "h": 13
      }
    },
    {
      "title": "Services Tracing",
      "type": "data",
      "query": "fetch dt.entity.service\n\n| fieldsAdd \n    entityId = toString(id)\n| fieldsAdd\n    id,\n    entityId,\n    entity.name,\n    serviceType,\n    lifetime,\n    lifeTimeEndMillis = unixMillisFromTimestamp(lifetime[end])\n\n| lookup [\n    fetch dt.davis.events.snapshots\n    | filter in(affected_entity_type, \"dt.entity.service\")\n    | expand affected_entity_ids\n    |dedup event.id, sort: {timestamp desc}\n    | filter event.status == \"ACTIVE\"\n    | fieldsAdd healthIndicators =  if(in(event.type,{\"SERVICE_ERROR_RATE_INCREASED\", \"SERVICE_SLOWDOWN\", \"SERVICE_UNEXPECTED_HIGH_LOAD\", \"SERVICE_UNEXPECTED_LOW_LOAD\", \"CUSTOM_ALERT\"}),\n                record(event.id, event.date, event.description, event.group)) \n    | summarize {healthIndicators = arrayRemoveNulls(collectArray(healthIndicators)), by:{affected_entity_ids}}],\n                sourceField : id, lookupField: affected_entity_ids, fields: {healthIndicators}, executionOrder: leftFirst\n    | sort arraySize(coalesce(healthIndicators, array())) desc\n    \n\n| fieldsAdd runs_on_from_attr = entityAttr(id, \"runs_on\", type: \"dt.entity.service\")\n| fieldsAdd pg_id = runs_on_from_attr[dt.entity.process_group]\n| fieldsAdd pg_name = entityName(pg_id, type: \"dt.entity.process_group\")\n| fieldsAdd entityAttr(id, \"tags\", type: \"dt.entity.service\"),\n            entityAttr(id, \"softwareTechnologies\", type: \"dt.entity.service\"),\n            entityAttr(id, \"serviceDetectionAttributes\", type: \"dt.entity.service\"),\n            entityAttr(id, \"publicCloudRegion\", type: \"dt.entity.service\")\n\n| fieldsAdd icon_from_attr = entityAttr(id, \"icon\", type: \"dt.entity.service\")\n| fieldsAdd entity = record(entityId = id, displayName = entity.name, lifetimeEndMillis = unixMillisFromTimestamp(lifetime[end]),\n            extraInfo = if(serviceType == \"UNIFIED\", toString(serviceDetectionAttributes), else: concat(pg_name)),\n            icon = icon_from_attr[primaryIconType])\n\n| fields HealthAlerts = healthIndicators, Service = entity[displayName]\n| fieldsAdd HealthAlerts = if(isNull(HealthAlerts), \"\ud83d\udfe9 Healthy\", else: \"\ud83d\udfe5 Unhealthy\")\n\n| sort Service asc\n\n| join [fetch dt.entity.service\n| expand managementZones\n| filter managementZones == $ManagementZone\n| fieldsAdd Service = entity.name],\n  on: {left[Service] == right[Service]}\n| dedup Service\n|lookup[timeseries {  `Response Time/ Latency` = percentile(dt.service.request.response_time, 90)},\n                       by:{ dt.entity.service }\n| fieldsAdd Service = entityName(dt.entity.service)\n| fieldsAdd `Response Time/ Latency` = arrayAvg(`Response Time/ Latency`)], \n  lookupField:Service, \n  SourceField:Service, \n  Fields: {`Response Time/ Latency`}\n\n|lookup[timeseries {`Request Volume` = sum(dt.service.request.count)}, by: { dt.entity.service }\n\n| fieldsAdd Service = entityName(dt.entity.service) \n| fieldsAdd `Request Volume` = arraySum(`Request Volume`)\n], lookupField:Service, SourceField: Service, Fields: `Request Volume`\n\n\n|lookup[timeseries {\n  err5xx = sum(\n              dt.service.request.count,\n              filter:{ http.response.status_code >= 500\n                       AND http.response.status_code <= 599 })\n}, by: {dt.entity.service}    \n\n| fieldsAdd Service = entityName(dt.entity.service)\n| fieldsAdd err5xx = arraySum(err5xx)\n], lookupField:Service, SourceField: Service, Fields: {err5xx}\n| fieldsAdd err5xx = if(isNull(err5xx), 0, else: err5xx)\n\n|lookup[timeseries {\n  err4xx = sum(\n              dt.service.request.count,\n              filter:{ http.response.status_code >= 400\n                       AND http.response.status_code <= 499 })\n}, by: {dt.entity.service}    \n\n| fieldsAdd Service = entityName(dt.entity.service)\n| fieldsAdd err4xx = arraySum(err4xx)\n], lookupField:Service, SourceField: Service, Fields: {err4xx}\n\n| fieldsAdd err4xx = if(isNull(err4xx), 0, else: err4xx)\n| fieldsAdd err4xx = if((err4xx>10*err5xx), 0, else: err4xx) \n| fieldsAdd `Request Volume` = if(isNull(`Request Volume`), 0, else: `Request Volume`)\n| fieldsAdd `Response Time/ Latency` = if(isNull(`Response Time/ Latency`), 0, else: `Response Time/ Latency`)\n\n| fieldsAdd `HTTP Error Rate (%)` = if(`Request Volume` > 100 AND (err5xx + err4xx)< `Request Volume`, ((err5xx + err4xx) / `Request Volume`) * 100.0, else: 0.0)\n| fieldsAdd `Reliability (%)`= 100 - `HTTP Error Rate (%)`\n| fields Service, HealthAlerts, `Reliability (%)`,`HTTP Error Rate (%)`,`Request Volume`, `Response Time/ Latency`\n\n\n\n\n",
      "visualization": "table",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "Reliability (%)",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-09-default, #649438)"
                },
                "comparator": ">",
                "label": "",
                "value": 99.5
              },
              {
                "id": 1,
                "color": {
                  "Default": "var(--dt-colors-charts-status-warning-default, #eca440)"
                },
                "comparator": "\u2265",
                "label": "",
                "value": 99
              },
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-status-critical-default, #c4233b)"
                },
                "comparator": "\u2265",
                "label": "",
                "value": 0
              }
            ]
          },
          {
            "id": 2,
            "field": "HTTP Error Rate (%)",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-09-default, #649438)"
                },
                "comparator": "\u2265",
                "label": "",
                "value": 0
              },
              {
                "id": 1,
                "color": {
                  "Default": "var(--dt-colors-charts-status-warning-default, #eca440)"
                },
                "comparator": "\u2265",
                "label": "",
                "value": 1
              },
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-loglevel-emergency-default, #ae132d)"
                },
                "comparator": "\u2265",
                "label": "",
                "value": 90
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "gap",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "curve": "linear",
          "pointsDisplay": "auto",
          "categoricalBarChartSettings": {
            "layout": "horizontal",
            "categoryAxisTickLayout": "horizontal",
            "scale": "absolute",
            "groupMode": "stacked",
            "colorPaletteMode": "multi-color",
            "valueAxisScale": "linear"
          },
          "colorPalette": "categorical",
          "valueRepresentation": "absolute",
          "truncationMode": "middle",
          "xAxisScaling": "auto",
          "xAxisLabel": "lifetime",
          "xAxisIsLabelVisible": false,
          "hiddenLegendFields": [
            "lifeTimeEndMillis"
          ],
          "leftYAxisSettings": {}
        },
        "singleValue": {
          "showLabel": true,
          "label": "",
          "prefixIcon": "AnalyticsIcon",
          "isIconVisible": false,
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "linewrapEnabled": true,
          "lineWrapIds": [
            [
              "Service"
            ]
          ],
          "monospacedFontEnabled": true,
          "monospacedFontColumns": [],
          "columnWidths": {
            "[\"Service\"]": 363.3203125,
            "[\"Request_Count\"]": 174
          },
          "columnTypeOverrides": [],
          "colorThresholdTarget": "background",
          "enableThresholdInRow": true,
          "columnOrder": [
            "[\"Service\"]",
            "[\"HealthAlerts\"]",
            "[\"Reliability (%)\"]",
            "[\"HTTP Error Rate (%)\"]",
            "[\"Request Volume\"]",
            "[\"Response Time/ Latency\"]"
          ],
          "sortBy": [
            {
              "columnId": "[\"HealthAlerts\"]",
              "direction": "ascending"
            }
          ]
        },
        "honeycomb": {
          "shape": "hexagon",
          "legend": {
            "hidden": false,
            "position": "auto",
            "ratio": "auto"
          },
          "dataMappings": {
            "value": "Service"
          },
          "displayedFields": [
            "Service",
            "Health Alerts"
          ],
          "truncationMode": "middle",
          "colorMode": "custom-colors",
          "colorPalette": "apdex",
          "customColors": [
            {
              "id": 4503184.5,
              "value": "Healthy",
              "color": "#b3007d",
              "comparator": "="
            }
          ]
        },
        "histogram": {
          "legend": {
            "position": "auto"
          },
          "yAxis": {
            "label": "Frequency",
            "isLabelVisible": true,
            "scale": "linear"
          },
          "colorPalette": "categorical",
          "dataMappings": [],
          "variant": "single",
          "truncationMode": "middle"
        },
        "valueBoundaries": {
          "min": "auto",
          "max": "auto"
        },
        "autoSelectVisualization": false
      },
      "querySettings": {
        "maxResultRecords": 10000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      },
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "layout": {
        "x": 3,
        "y": 14,
        "w": 14,
        "h": 7
      }
    },
    {
      "title": "Total Problems",
      "type": "data",
      "query": "fetch dt.davis.problems\n| expand managementZones\n| filter managementZones == $ManagementZone\n| summarize {count()}",
      "visualization": "singleValue",
      "visualizationSettings": {
        "autoSelectVisualization": false,
        "thresholds": [
          {
            "id": 1,
            "field": "count()",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-09-default, #649438)"
                },
                "comparator": "=",
                "label": "",
                "value": 0
              },
              {
                "id": 1,
                "color": {
                  "Default": "var(--dt-colors-charts-status-warning-default, #eca440)"
                },
                "comparator": "\u2265",
                "label": ""
              },
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-status-critical-default, #c4233b)"
                },
                "comparator": "\u2265",
                "label": "",
                "value": 0
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "gap",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "curve": "linear",
          "pointsDisplay": "auto",
          "categoricalBarChartSettings": {
            "layout": "horizontal",
            "categoryAxisTickLayout": "horizontal",
            "scale": "absolute",
            "groupMode": "stacked",
            "colorPaletteMode": "multi-color",
            "valueAxisScale": "linear"
          },
          "colorPalette": "categorical",
          "valueRepresentation": "absolute",
          "truncationMode": "middle"
        },
        "singleValue": {
          "showLabel": false,
          "label": "count()",
          "prefixIcon": "WarningIcon",
          "isIconVisible": true,
          "recordField": "count()",
          "autoscale": true,
          "sparklineSettings": {},
          "alignment": "center",
          "trend": {
            "trendType": "auto",
            "isVisible": true
          },
          "colorThresholdTarget": "background"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "linewrapEnabled": false,
          "lineWrapIds": [],
          "monospacedFontEnabled": false,
          "monospacedFontColumns": [],
          "columnWidths": {},
          "columnTypeOverrides": []
        },
        "honeycomb": {
          "shape": "hexagon",
          "legend": {
            "hidden": false,
            "position": "auto",
            "ratio": "auto"
          },
          "dataMappings": {},
          "displayedFields": [],
          "truncationMode": "middle",
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "legend": {
            "position": "auto"
          },
          "yAxis": {
            "label": "Frequency",
            "isLabelVisible": true,
            "scale": "linear"
          },
          "colorPalette": "categorical",
          "dataMappings": [],
          "variant": "single",
          "truncationMode": "middle"
        },
        "valueBoundaries": {
          "min": "auto",
          "max": "auto"
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 1,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      },
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "layout": {
        "x": 8,
        "y": 3,
        "w": 2,
        "h": 3
      }
    }
  ]
}